name: CI Tests
on: [push]
jobs:
  run-tests:
    name: PHP ${{ matrix.php-versions }}
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: 'password'
          MYSQL_DATABASE: 'test'
          MYSQL_ROOT_HOST: '%'
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['7.3', '7.4']
    steps:
      - name: Shut down Host Supplied MySQL
        run: sudo service mysql stop
      - name: Verify MySQL connection from host
        run: |
          sudo apt-get install -y mysql-client
          mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -uroot -ppassword -e "SHOW DATABASES"
          mysqladmin version --host 127.0.0.1 --port ${{ job.services.mysql.ports['3306'] }} -uroot -ppassword
      - uses: actions/checkout@v1
      - name: Setup PHP Action
        uses: shivammathur/setup-php@1.6.1
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: pdo_mysql,mbstring
          coverage: pcov
      - name: Validate composer.json and composer.lock
        run: composer validate
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.php-versions }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install dependencies
        run: composer install --prefer-dist --no-progress --no-suggest
      - name: CS-Check
        run: composer cs-check
      - name: Test
        run: composer test-coverage
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports['3306'] }}
